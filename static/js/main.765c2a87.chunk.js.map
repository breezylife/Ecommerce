{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signin.js","user/Signup.js","auth/PrivateRoute.js","auth/AdminRoute.js","user/UserDashboard.js","user/AdminDashboard.js","admin/AddCategory.js","admin/apiAdmin.js","admin/AddProduct.js","admin/Orders.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","core/FixedPrice.js","core/CheckBox.js","core/RadioBox.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","className","style","to","length","user","role","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signin","useState","email","password","error","loading","redirectToReferrer","values","setValues","handleChange","name","event","target","value","clickSubmit","preventDefault","headers","Accept","body","stringify","json","signin","data","setItem","authenticate","display","type","onChange","Signup","success","PrivateRoute","Component","component","rest","render","props","state","from","AdminRoute","Dashboard","_id","AdminDashboard","AddCategory","setName","setError","setSuccess","token","e","userId","category","Authorization","createCategory","showSuccess","showError","onSubmit","autoFocus","AddProduct","price","categories","shipping","quantity","photo","createdProduct","redirectToProfile","formData","init","FormData","useEffect","files","set","product","createProduct","accept","map","c","i","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","key","readOnly","handleStatusChange","orderId","status","updateOrderStatus","showStatus","o","index","showOrdersLength","oIndex","borderBottom","transaction_id","amount","moment","createdAt","fromNow","address","products","p","pIndex","padding","border","count","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","alt","maxHeight","maxWidth","Card","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","addToCart","cart","Array","Set","id","find","addItem","productId","updateItem","Number","shouldRedirect","substring","showViewButton","showAddToCart","splice","showRemoveButton","showCartUpdateOptions","Search","search","results","searched","setData","searchData","params","query","queryString","list","searchSubmit","searchMessage","placeholder","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","prices","array","CheckBox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","setValue","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","obj","parseInt","Porduct","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","Checkout","clientToken","instance","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","processPayment","createOrderData","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Routes","exact","Product","ReactDOM","document","getElementById"],"mappings":"qMAAaA,EAAMC,4BC4DNC,EAAkB,WAC3B,MAAqB,oBAAVC,WAGPC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,U,OC5DzCG,EAAW,SAACC,EAASC,GACvB,OAAID,EAAQE,SAASC,WAAaF,EACvB,CAAEG,MAAO,WAET,CAAEA,MAAO,YA+DTC,eA3DF,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAAH,OACT,8BACI,qBAAIM,UAAU,0BAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,KAAMQ,GAAG,IAA7D,oBAIJ,oBAAIF,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,SAAUQ,GAAG,QAAjE,oBAIJ,oBAAIF,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,SAAUQ,GAAG,QAAjE,kBACS,8BAAK,uBAAOF,UAAU,aAAjB,SCGJ,qBAAXZ,QACHC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,SAASa,OAGjD,WDLEhB,KAAqD,IAAhCA,IAAkBiB,KAAKC,MACzC,oBAAIL,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,mBAAoBQ,GAAG,kBAA3E,yBAKPf,KAAqD,IAAhCA,IAAkBiB,KAAKC,MACzC,oBAAIL,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,oBAAqBQ,GAAG,mBAA5E,0BAKNf,KACE,qCACI,oBAAIa,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,WAAYQ,GAAG,UAAnE,sBAIJ,oBAAIF,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,MAAOR,EAASC,EAAS,WAAYQ,GAAG,UAAnE,yBAMXf,KACG,oBAAIa,UAAU,WAAd,SACI,sBAAMA,UAAU,WAAWC,MAAO,CAAEK,OAAQ,UAAWR,MAAO,WAAaS,QAAS,kBDhBjF,SAACC,GACpB,GAAsB,qBAAXpB,OAGP,OAFAC,aAAaoB,WAAW,OACxBD,IACOE,MAAM,GAAD,OAAIzB,EAAJ,YAAmB,CAC3B0B,OAAQ,QAGPC,MAAK,SAAAC,GACFC,QAAQC,IAAI,UAAWF,MAE1BG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCKwEC,EAAQ,WAC9FxB,EAAQyB,KAAK,SADjB,+BE9CLC,G,OAXA,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,MAAeC,mBAAf,MAA6B,GAA7B,EAAiCtB,EAAjC,EAAiCA,UAAWuB,EAA5C,EAA4CA,SAA5C,OACX,gCACI,cAAC,EAAD,IACA,sBAAKvB,UAAU,YAAf,UACI,6BAAKqB,IACL,mBAAGrB,UAAU,OAAb,SAAqBsB,OAEzB,qBAAKtB,UAAWA,EAAhB,SAA4BuB,SCkFrBC,G,OAtFA,WACX,MAA4BC,mBAAS,CACjCC,MAAO,qBACPC,SAAU,WACVC,MAAO,GACPC,SAAS,EACTC,oBAAoB,IALxB,mBAAOC,EAAP,KAAeC,EAAf,KAQQN,EAAwDK,EAAxDL,MAAOC,EAAiDI,EAAjDJ,SAAUE,EAAuCE,EAAvCF,QAASD,EAA8BG,EAA9BH,MAAOE,EAAuBC,EAAvBD,mBACjC1B,EAASjB,IAATiB,KAEF6B,EAAe,SAAAC,GAAI,OAAI,SAAAC,GACzBH,EAAU,2BAAKD,GAAN,gBAAcH,OAAO,GAAQM,EAAOC,EAAMC,OAAOC,WAGxDC,EAAc,SAACH,GACjBA,EAAMI,iBACNP,EAAU,2BAAKD,GAAN,IAAcH,OAAO,EAAOC,SAAS,KJLhC,SAACzB,GAEnB,OAAOM,MAAM,GAAD,OAAIzB,EAAJ,WAAkB,CAC1B0B,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMnD,KAAKoD,UAAUvC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MIRhB4B,CAAO,CAAEnB,QAAOC,aACXf,MAAK,SAAAkC,GACEA,EAAKlB,MACLI,EAAU,2BAAKD,GAAN,IAAcH,MAAOkB,EAAKlB,MAAOC,SAAS,KJS3C,SAACiB,EAAMtC,GACT,qBAAXpB,SACPC,aAAa0D,QAAQ,MAAOxD,KAAKoD,UAAUG,IAC3CtC,KIVYwC,CACIF,GAAM,WACFd,EAAU,2BACHD,GADE,IAELD,oBAAoB,YAgDhD,OACI,eAAC,EAAD,CAAQT,MAAM,cAAcC,YAAY,QAAQtB,UAAU,iCAA1D,UAnBA6B,GACI,qBAAK7B,UAAU,mBAAf,SACI,8CARR,qBAAKA,UAAU,qBAAqBC,MAAO,CAAEgD,QAASrB,EAAQ,GAAK,QAAnE,SACKA,IAjBL,iCACI,sBAAK5B,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBAAOkD,KAAK,QAAQb,MAAOX,EAAOyB,SAAUlB,EAAa,SAAUjC,UAAU,oBAEjF,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,uBAAOkD,KAAK,WAAWb,MAAOV,EAAUwB,SAAUlB,EAAa,YAAajC,UAAU,oBAE1F,wBAAQO,QAAS+B,EAAatC,UAAU,kBAAxC,uBAoBA8B,EACI1B,GAAsB,IAAdA,EAAKC,KACN,cAAC,IAAD,CAAUH,GAAG,qBAEb,cAAC,IAAD,CAAUA,GAAG,oBAGxBf,IACO,cAAC,IAAD,CAAUe,GAAG,WADxB,OCEOkD,EA3EA,WACX,MAA4B3B,mBAAS,CACjCS,KAAM,GACNR,MAAO,GACPC,SAAU,GACVC,MAAO,GACPyB,SAAS,IALb,mBAAOtB,EAAP,KAAeC,EAAf,KAQQE,EAA0CH,EAA1CG,KAAMR,EAAoCK,EAApCL,MAAOC,EAA6BI,EAA7BJ,SAAU0B,EAAmBtB,EAAnBsB,QAASzB,EAAUG,EAAVH,MAElCK,EAAe,SAAAC,GAAI,OAAI,SAAAC,GACzBH,EAAU,2BAAKD,GAAN,gBAAcH,OAAO,GAAQM,EAAOC,EAAMC,OAAOC,WAGxDC,EAAc,SAACH,GLnBH,IAAC/B,EKoBf+B,EAAMI,iBACNP,EAAU,2BAAKD,GAAN,IAAcH,OAAO,MLrBfxB,EKsBR,CAAE8B,OAAMR,QAAOC,YLpBnBjB,MAAM,GAAD,OAAIzB,EAAJ,WAAkB,CAC1B0B,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMnD,KAAKoD,UAAUvC,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OKSXL,MAAK,SAAAkC,GACEA,EAAKlB,MACLI,EAAU,2BAAKD,GAAN,IAAcH,MAAOkB,EAAKlB,MAAOyB,SAAS,KAEnDrB,EAAU,2BACHD,GADE,IAELG,KAAM,GACNR,MAAO,GACPC,SAAU,GACVC,MAAO,GACPyB,SAAS,SAqC7B,OACI,eAAC,EAAD,CAAQhC,MAAM,cAAcC,YAAY,QAAQtB,UAAU,iCAA1D,UALA,sBAAKA,UAAU,mBAAmBC,MAAO,CAAEgD,QAASI,EAAU,GAAK,QAAnE,4CACmC,cAAC,IAAD,CAAMnD,GAAG,UAAT,uBAPnC,qBAAKF,UAAU,qBAAqBC,MAAO,CAAEgD,QAASrB,EAAQ,GAAK,QAAnE,SACKA,IArBL,iCACI,sBAAK5B,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,kBACA,uBAAOkD,KAAK,OAAOb,MAAOH,EAAMiB,SAAUlB,EAAa,QAASjC,UAAU,oBAE9E,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBAAOkD,KAAK,QAAQb,MAAOX,EAAOyB,SAAUlB,EAAa,SAAUjC,UAAU,oBAEjF,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,uBAAOkD,KAAK,WAAWb,MAAOV,EAAUwB,SAAUlB,EAAa,YAAajC,UAAU,oBAE1F,wBAAQO,QAAS+B,EAAatC,UAAU,kBAAxC,2B,QCtCGsD,EAbM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OAAQ,SAAAC,GAAK,OAAIxE,IAC9B,cAACoE,EAAD,eAAeI,IAEf,cAAC,IAAD,CAAUzD,GAAI,CACVL,SAAU,UACV+D,MAAO,CAAEC,KAAMF,EAAM/D,kBCOlBkE,EAbI,SAAC,GAAD,IAAcP,EAAd,EAAGC,UAAyBC,EAA5B,oCACf,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OAAQ,SAAAC,GAAK,OAAIxE,KAAqD,IAAhCA,IAAkBiB,KAAKC,KAC1E,cAACkD,EAAD,eAAeI,IAEf,cAAC,IAAD,CAAUzD,GAAI,CACVL,SAAU,UACV+D,MAAO,CAAEC,KAAMF,EAAM/D,kBCqDlBmE,EA3DG,WAEd,MAA6C5E,IAArCiB,KAAa8B,GAArB,EAAgB8B,IAAhB,EAAqB9B,MAAMR,EAA3B,EAA2BA,MAAOrB,EAAlC,EAAkCA,KA0ClC,OACI,cAAC,EAAD,CAAQgB,MAAM,YAAYC,YAAW,gBAAWY,EAAX,KAAoBlC,UAAU,YAAnE,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SAzCJ,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,wBACA,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,QAA9B,uBAEJ,oBAAIF,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,kBAA9B,sCAqCR,sBAAKF,UAAU,QAAf,UA5BJ,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,8BACA,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCkC,IACjC,oBAAIlC,UAAU,kBAAd,SAAiC0B,IACjC,oBAAI1B,UAAU,kBAAd,SAA0C,IAATK,EAAa,QAAU,yBAQhE,sBAAKL,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,8BACA,oBAAIA,UAAU,aAAd,SACI,oBAAIA,UAAU,kBAAd,mCCSLiE,EA9CQ,WAEnB,MAA6C9E,IAArCiB,KAAa8B,GAArB,EAAgB8B,IAAhB,EAAqB9B,MAAMR,EAA3B,EAA2BA,MAAOrB,EAAlC,EAAkCA,KAkClC,OACI,cAAC,EAAD,CAAQgB,MAAM,YAAYC,YAAW,gBAAWY,EAAX,KAAoBlC,UAAU,YAAnE,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,cAjCJ,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,yBACA,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,mBAA9B,+BAEJ,oBAAIF,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,kBAA9B,8BAEJ,oBAAIF,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,gBAA9B,iCAuBR,OACA,sBAAKF,UAAU,QAAf,cAfJ,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,8BACA,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiCkC,IACjC,oBAAIlC,UAAU,kBAAd,SAAiC0B,IACjC,oBAAI1B,UAAU,kBAAd,SAA0C,IAATK,EAAa,QAAU,yBAU5D,aCkCD6D,EAzEK,WAChB,MAAwBzC,mBAAS,IAAjC,mBAAOS,EAAP,KAAaiC,EAAb,KACA,EAA0B1C,oBAAS,GAAnC,mBAAOG,EAAP,KAAcwC,EAAd,KACA,EAA8B3C,oBAAS,GAAvC,mBAAO4B,EAAP,KAAgBgB,EAAhB,KAGA,EAAwBlF,IAAhBiB,EAAR,EAAQA,KAAMkE,EAAd,EAAcA,MAERrC,EAAe,SAACsC,GAClBH,EAAS,IACTD,EAAQI,EAAEnC,OAAOC,QAGfC,EAAc,SAACiC,GACjBA,EAAEhC,iBACF6B,EAAS,IACTC,GAAW,GCpBW,SAACG,EAAQF,EAAOG,GAE1C,OAAO/D,MAAM,GAAD,OAAIzB,EAAJ,4BAA2BuF,GAAU,CAC7C7D,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBiC,cAAc,UAAD,OAAYJ,IAE7B5B,KAAMnD,KAAKoD,UAAU8B,KAEpB7D,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MDOhB0D,CAAevE,EAAK4D,IAAKM,EAAO,CAAEpC,SAC7BtB,MAAK,SAAAkC,GACEA,EAAKlB,MACLwC,EAAStB,EAAKlB,QAEdwC,EAAS,IACTC,GAAW,QAmC3B,OACI,cAAC,EAAD,CAAQhD,MAAM,qBAAqBC,YAAW,gBAAWlB,EAAK8B,KAAhB,iCAA9C,SACI,qBAAKlC,UAAU,MAAf,SACI,sBAAKA,UAAU,uBAAf,UAvBQ,WAChB,GAAIqD,EACA,OAAO,qBAAIrD,UAAU,eAAd,UAA8BkC,EAA9B,iBAsBE0C,GAlBC,WACd,GAAIhD,EACA,OAAO,oBAAI5B,UAAU,cAAd,0CAiBE6E,GAlCb,uBAAMC,SAAUxC,EAAhB,UACI,sBAAKtC,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,kBACA,uBAAOkD,KAAK,OAAOlD,UAAU,eAAemD,SAAUlB,EAAcI,MAAOH,EAAM6C,WAAS,OAE9F,wBAAQ/E,UAAU,0BAAlB,gCAiBJ,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,eAAtC,yCE0GGgF,EA/JI,WACf,MAA4BvD,mBAAS,CACjCS,KAAM,GACNZ,YAAa,GACb2D,MAAO,GACPC,WAAY,GACZT,SAAU,GACVU,SAAU,GACVC,SAAU,GACVC,MAAO,GACPxD,SAAS,EACTD,MAAO,GACP0D,eAAgB,GAChBC,mBAAmB,EACnBC,SAAU,KAbd,mBAAOzD,EAAP,KAAeC,EAAf,KAgBA,EAAwB7C,IAAhBiB,EAAR,EAAQA,KAAMkE,EAAd,EAAcA,MAEVpC,EAaAH,EAbAG,KACAZ,EAYAS,EAZAT,YACA2D,EAWAlD,EAXAkD,MACAC,EAUAnD,EAVAmD,WAGAE,EAOArD,EAPAqD,SAEAvD,EAKAE,EALAF,QACAD,EAIAG,EAJAH,MACA0D,EAGAvD,EAHAuD,eAEAE,EACAzD,EADAyD,SAIEC,EAAO,WDFN/E,MAAM,GAAD,OAAIzB,EAAJ,eAAsB,CAC9B0B,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MCHVL,MAAK,SAAAkC,GACbA,EAAKlB,MACLI,EAAU,2BAAKD,GAAN,IAAcH,MAAOkB,EAAKlB,SAEnCI,EAAU,2BAAKD,GAAN,IAAcmD,WAAYpC,EAAM0C,SAAU,IAAIE,gBAKnEC,qBAAU,WACNF,MACD,IAEH,IAAMxD,EAAe,SAAAC,GAAI,OAAI,SAAAC,GACzB,IAAME,EAAiB,UAATH,EAAmBC,EAAMC,OAAOwD,MAAM,GAAKzD,EAAMC,OAAOC,MACtEmD,EAASK,IAAI3D,EAAMG,GAInBL,EAAU,2BAAKD,GAAN,kBAAeG,EAAOG,OAI7BC,EAAc,SAACH,GACjBA,EAAMI,iBACNP,EAAU,2BAAKD,GAAN,IAAcH,MAAO,GAAIC,SAAS,KD9CtB,SAAC2C,EAAQF,EAAOwB,GACzC,OAAOpF,MAAM,GAAD,OAAIzB,EAAJ,2BAA0BuF,GAAU,CAC5C7D,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACRiC,cAAc,UAAD,OAAYJ,IAE7B5B,KAAMoD,IAELlF,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,MCkChB8E,CAAc3F,EAAK4D,IAAKM,EAAOkB,GAC1B5E,MAAK,SAAAkC,GACEA,EAAKlB,MACLI,EAAU,2BAAKD,GAAN,IAAcH,MAAOkB,EAAKlB,SAEnCI,EAAU,2BAAKD,GAAN,IAAcG,KAAM,GAAIZ,YAAa,GAAI+D,MAAO,GAAIJ,MAAO,GAAIG,SAAU,GAAIvD,SAAS,EAAOyD,eAAgBxC,EAAKZ,YA8E3I,OACI,cAAC,EAAD,CAAQb,MAAM,oBAAoBC,YAAW,gBAAWlB,EAAK8B,KAAhB,gCAA7C,SACI,qBAAKlC,UAAU,MAAf,SACI,sBAAKA,UAAU,uBAAf,UAVR6B,GACI,qBAAK7B,UAAU,sBAAf,SACI,8CARR,qBAAKA,UAAU,mBAAmBC,MAAO,CAAEgD,QAASqC,EAAiB,GAAK,QAA1E,SACI,yCAAQA,GAAR,qBAPJ,qBAAKtF,UAAU,qBAAqBC,MAAO,CAAEgD,QAASrB,EAAQ,GAAK,QAAnE,SACKA,IAtDL,uBAAMkD,SAAUxC,EAAatC,UAAU,OAAvC,UACI,4CACA,qBAAKA,UAAU,aAAf,SACI,uBAAOA,UAAU,oBAAjB,SACI,uBAAOmD,SAAUlB,EAAa,SAAUiB,KAAK,OAAOhB,KAAK,QAAQ8D,OAAO,gBAIhF,sBAAKhG,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,kBACA,uBAAOmD,SAAUlB,EAAa,QAASiB,KAAK,OAAOlD,UAAU,eAAeqC,MAAOH,OAGvF,sBAAKlC,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,yBACA,0BAAUmD,SAAUlB,EAAa,eAAgBjC,UAAU,eAAeqC,MAAOf,OAGrF,sBAAKtB,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBAAOmD,SAAUlB,EAAa,SAAUiB,KAAK,SAASlD,UAAU,eAAeqC,MAAO4C,OAG1F,sBAAKjF,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,yBAAQmD,SAAUlB,EAAa,YAAajC,UAAU,eAAtD,UACI,mDACCkF,GAAcA,EAAWe,KAAI,SAACC,EAAGC,GAAJ,OAC1B,wBAAgB9D,MAAO6D,EAAElC,IAAzB,SAA+BkC,EAAEhE,MAApBiE,YAKzB,sBAAKnG,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,yBAAQmD,SAAUlB,EAAa,YAAajC,UAAU,eAAtD,UACI,wBAAQqC,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,uBAIR,sBAAKrC,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,uBAAOmD,SAAUlB,EAAa,YAAaiB,KAAK,SAASlD,UAAU,eAAeqC,MAAO+C,OAG7F,wBAAQpF,UAAU,0BAAlB,uC,iBCUGoG,EAhIA,WACX,MAA4B3E,mBAAS,IAArC,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAAwC7E,mBAAS,IAAjD,mBAAO8E,EAAP,KAAqBC,EAArB,KAEA,EAAwBrH,IAAhBiB,EAAR,EAAQA,KAAMkE,EAAd,EAAcA,MAERmC,EAAa,YFmCG,SAACjC,EAAQF,GAC/B,OAAO5D,MAAM,GAAD,OAAIzB,EAAJ,uBAAsBuF,GAAU,CACxC7D,OAAQ,MACR6B,QAAS,CACLC,OAAQ,mBACRiC,cAAc,UAAD,OAAYJ,MAG5B1D,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OE7C1ByF,CAAWtG,EAAK4D,IAAKM,GAAO1D,MAAK,SAAAkC,GACzBA,EAAKlB,MACLd,QAAQC,IAAI+B,EAAKlB,OAEjB0E,EAAUxD,OAKhB6D,EAAmB,YFuCE,SAACnC,EAAQF,GACpC,OAAO5D,MAAM,GAAD,OAAIzB,EAAJ,gCAA+BuF,GAAU,CACjD7D,OAAQ,MACR6B,QAAS,CACLC,OAAQ,mBACRiC,cAAc,UAAD,OAAYJ,MAG5B1D,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OEjD1B2F,CAAgBxG,EAAK4D,IAAKM,GAAO1D,MAAK,SAAAkC,GAC9BA,EAAKlB,MACLd,QAAQC,IAAI+B,EAAKlB,OAEjB4E,EAAgB1D,OAK5B6C,qBAAU,WACNc,IACAE,MACD,IAEH,IAUME,EAAY,SAACC,EAAKzE,GAAN,OACd,sBAAKrC,UAAU,2BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SAAmC8G,MAEvC,uBAAO5D,KAAK,OAAOb,MAAOA,EAAOrC,UAAU,eAAe+G,UAAQ,QAIpEC,EAAqB,SAACzC,EAAG0C,IFmBF,SAACzC,EAAQF,EAAO2C,EAASC,GACtD,OAAOxG,MAAM,GAAD,OAAIzB,EAAJ,kBAAiBgI,EAAjB,mBAAmCzC,GAAU,CACrD7D,OAAQ,MACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBiC,cAAc,UAAD,OAAYJ,IAE7B5B,KAAMnD,KAAKoD,UAAU,CAAEuE,SAAQD,cAE9BrG,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OE/B1BkG,CAAkB/G,EAAK4D,IAAKM,EAAO2C,EAAS1C,EAAEnC,OAAOC,OAAOzB,MAAK,SAAAkC,GACzDA,EAAKlB,MACLd,QAAQC,IAAI+B,EAAKlB,OAEjB6E,QAKNW,EAAa,SAACC,GAAD,OACf,sBAAKrH,UAAU,aAAf,UACI,qBAAIA,UAAU,YAAd,sBAAoCqH,EAAEH,UACtC,yBAAQlH,UAAU,eAAemD,SAAU,SAACoB,GAAD,OAAOyC,EAAmBzC,EAAG8C,EAAErD,MAA1E,UACI,mDACCuC,EAAaN,KAAI,SAACiB,EAAQI,GAAT,OACd,wBAAoBjF,MAAO6E,EAA3B,SAAoCA,GAAvBI,aAM7B,OACI,cAAC,EAAD,CAAQjG,MAAM,qBAAqBC,YAAW,gBAAWlB,EAAK8B,KAAhB,wCAA9C,SACI,qBAAKlC,UAAU,MAAf,SACI,sBAAKA,UAAU,uBAAf,UA5Ca,SAAAqG,GACrB,OAAIA,EAAOlG,OAAS,EAEZ,qBAAIH,UAAU,wBAAd,2BAAqDqG,EAAOlG,UAGzD,oBAAIH,UAAU,cAAd,uBAuCEuH,CAAiBlB,GAEjBA,EAAOJ,KAAI,SAACoB,EAAGG,GACZ,OACI,sBAAKxH,UAAU,OAAoBC,MAAO,CAAEwH,aAAc,oBAA1D,UACI,oBAAIzH,UAAU,OAAd,SACI,uBAAMA,UAAU,aAAhB,wBACgBqH,EAAErD,SAItB,qBAAIhE,UAAU,kBAAd,UACI,oBAAIA,UAAU,kBAAd,SACKoH,EAAWC,KAEhB,qBAAIrH,UAAU,kBAAd,8BACsBqH,EAAEK,kBAExB,qBAAI1H,UAAU,kBAAd,sBACcqH,EAAEM,UAEhB,qBAAI3H,UAAU,kBAAd,0BACkBqH,EAAEjH,KAAK8B,QAEzB,qBAAIlC,UAAU,kBAAd,0BACkB4H,IAAOP,EAAEQ,WAAWC,aAEtC,qBAAI9H,UAAU,kBAAd,qCACwBqH,EAAEU,cAG9B,qBAAI/H,UAAU,wBAAd,0CACkCqH,EAAEW,SAAS7H,UAG5CkH,EAAEW,SAAS/B,KAAI,SAACgC,EAAGC,GAAJ,OACZ,sBAAKlI,UAAU,OAAoBC,MAAO,CAAEkI,QAAS,OAAQC,OAAQ,oBAArE,UACKvB,EAAU,eAAgBoB,EAAE/F,MAC5B2E,EAAU,gBAAiBoB,EAAEhD,OAC7B4B,EAAU,gBAAiBoB,EAAEI,OAC7BxB,EAAU,aAAcoB,EAAEjE,OAJJkE,QAhCRV,c,kBCpF1Cc,EAAc,SAACC,GACxB,OAAO7H,MAAM,GAAD,OAAIzB,EAAJ,4BAA2BsJ,EAA3B,uBAAwD,CAChE5H,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OAGrBuH,EAAgB,WACzB,OAAO9H,MAAM,GAAD,OAAIzB,EAAJ,eAAsB,CAC9B0B,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OAGrBwH,EAAsB,SAACC,EAAMC,GAAyB,IAAlBC,EAAiB,uDAAP,GACjD9F,EAAO,CACT4F,OAAMC,QAAOC,WAGjB,OAAOlI,MAAM,GAAD,OAAIzB,EAAJ,uBAA8B,CACtC0B,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMnD,KAAKoD,UAAUG,KAEpBlC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OC/BT4H,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACd,qBAAK/I,UAAU,cAAf,SACI,qBAAKgJ,IAAG,UAAK/J,EAAL,YAAY8J,EAAZ,kBAAyBD,EAAK9E,KAAOiF,IAAKH,EAAK5G,KAAMlC,UAAU,OAAOC,MAAO,CAAEiJ,UAAW,OAAQC,SAAU,aCwG7GC,EAvGF,SAAC,GAAkK,IAqDzJhE,EArDPU,EAA+J,EAA/JA,QAA+J,IAAtJuD,6BAAsJ,aAAxHC,2BAAwH,aAA5FC,kBAA4F,aAAxEC,+BAAwE,aAAvCC,cAAuC,MAA9B,SAAAC,GAAC,OAAIA,GAAyB,MAAtBC,WAAsB,WAAhBC,EAAgB,EAC3K,EAAgCnI,oBAAS,GAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KAeMC,EAAY,YdtBC,SAACjB,EAAMtI,GAC1B,IAAIwJ,EAAO,GACW,qBAAX5K,SACHC,aAAaC,QAAQ,UACrB0K,EAAOzK,KAAKC,MAAMH,aAAaC,QAAQ,UAE3C0K,EAAK7I,KAAL,2BACO2H,GADP,IAEIT,MAAO,KAYX2B,EAAOC,MAAMpG,KAAK,IAAIqG,IAAIF,EAAK/D,KAAI,SAAAgC,GAAC,OAAIA,EAAEjE,SAAOiC,KAAI,SAAAkE,GACjD,OAAOH,EAAKI,MAAK,SAAAnC,GAAC,OAAIA,EAAEjE,MAAQmG,QAGpC9K,aAAa0D,QAAQ,OAAQxD,KAAKoD,UAAUqH,IAC5CxJ,KcFA6J,CAAQvE,GAAS,WACbgE,GAAY,OAkDd7H,EAAe,SAAAqI,GAAS,OAAI,SAAAnI,GAC9BsH,GAAQE,GAEJxH,EAAMC,OAAOC,OAAS,Gd7BR,SAACiI,EAAWjC,GAClC,IAAI2B,EAAO,GACW,qBAAX5K,SACHC,aAAaC,QAAQ,UACrB0K,EAAOzK,KAAKC,MAAMH,aAAaC,QAAQ,UAG3C0K,EAAK/D,KAAI,SAACH,EAASK,GACXL,EAAQ9B,MAAQsG,IAChBN,EAAK7D,GAAGkC,MAAQA,MAIxBhJ,aAAa0D,QAAQ,OAAQxD,KAAKoD,UAAUqH,KciBxCO,CAAWD,EAAWE,OAAOrI,EAAMC,OAAOC,UAIlD,OACI,sBAAKrC,UAAU,OAAf,UACI,qBAAKA,UAAU,mBAAf,SACK8F,EAAQ5D,OAEb,sBAAKlC,UAAU,YAAf,UA3De,SAAA6J,GACnB,GAAIA,EACA,OAAO,cAAC,IAAD,CAAU3J,GAAG,UA0DfuK,CAAeZ,GAChB,cAAC,EAAD,CAAWf,KAAMhD,EAASiD,IAAI,YAC9B,mBAAG/I,UAAU,YAAb,SAA0B8F,EAAQxE,YAAYoJ,UAAU,EAAG,MAC3D,oBAAG1K,UAAU,WAAb,cAA0B8F,EAAQb,SAClC,oBAAGjF,UAAU,UAAb,sBAAiC8F,EAAQrB,UAAYqB,EAAQrB,SAASvC,QACtE,oBAAGlC,UAAU,UAAb,sBAAiC4H,IAAO9B,EAAQ+B,WAAWC,cAlCpD1C,EAoCIU,EAAQV,SAnCpBA,EAAW,EAAI,sBAAMpF,UAAU,iCAAhB,sBAAmE,sBAAMA,UAAU,iCAAhB,2BAoCjF,uBAtFW,SAAAqJ,GACnB,OACIA,GACI,cAAC,IAAD,CAAMnJ,GAAE,mBAAc4F,EAAQ9B,KAAOhE,UAAU,OAA/C,SACI,wBAAQA,UAAU,oCAAlB,4BAmFH2K,CAAetB,GA/DN,SAAAC,GAClB,OACIA,GACI,wBAAQtJ,UAAU,oCAAoCO,QAASwJ,EAA/D,yBA8DCa,CAActB,GAtDF,SAAAE,GACrB,OACIA,GACI,wBAAQxJ,UAAU,mCAAmCO,QAAS,YdiBpD,SAAC+J,GACvB,IAAIN,EAAO,GACW,qBAAX5K,SACHC,aAAaC,QAAQ,UACrB0K,EAAOzK,KAAKC,MAAMH,aAAaC,QAAQ,UAG3C0K,EAAK/D,KAAI,SAACH,EAASK,GACXL,EAAQ9B,MAAQsG,GAChBN,EAAKa,OAAO1E,EAAG,MAGvB9G,aAAa0D,QAAQ,OAAQxD,KAAKoD,UAAUqH,Kc5BhCvJ,CAAWqF,EAAQ9B,KACnByF,GAAQE,IAFZ,4BAqDCmB,CAAiBtB,GAtCA,SAAAD,GAC1B,OAAOA,GAAc,8BACjB,sBAAKvJ,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,+BAEJ,uBAAOkD,KAAK,SAASlD,UAAU,eAAeqC,MAAOyD,EAAQuC,MAAOlF,SAAUlB,EAAa6D,EAAQ9B,YAkClG+G,CAAsBxB,UCSxByB,EA3GA,WACX,MAAwBvJ,mBAAS,CAC7ByD,WAAY,GACZT,SAAU,GACVwG,OAAQ,GACRC,QAAS,GACTC,UAAU,IALd,mBAAOrI,EAAP,KAAasI,EAAb,KAQQlG,EAAoDpC,EAApDoC,WAAYT,EAAwC3B,EAAxC2B,SAAUwG,EAA8BnI,EAA9BmI,OAAQC,EAAsBpI,EAAtBoI,QAASC,EAAarI,EAAbqI,SAY/CxF,qBAAU,WATN6C,IAAgB5H,MAAK,SAAAkC,GACbA,EAAKlB,MACLd,QAAQC,IAAI+B,EAAKlB,OAEjBwJ,EAAQ,2BAAKtI,GAAN,IAAYoC,WAAYpC,UAOxC,IAEH,IAAMuI,EAAa,WACXJ,GHaQ,SAAAK,GAChB,IAAMC,EAAQC,IAAY7I,UAAU2I,GACpC,OAAO5K,MAAM,GAAD,OAAIzB,EAAJ,4BAA2BsM,GAAS,CAC5C5K,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MGpBtBwK,CAAK,CAAER,OAAQA,QAAUrB,EAAWnF,SAAUA,IACzC7D,MAAK,SAAAC,GACEA,EAASe,MACTd,QAAQC,IAAIF,EAASe,OAErBwJ,EAAQ,2BAAKtI,GAAN,IAAYoI,QAASrK,EAAUsK,UAAU,SAM9DO,EAAe,SAACnH,GAClBA,EAAEhC,iBACF8I,KAGEpJ,EAAe,SAAAC,GAAI,OAAI,SAAAC,GAAU,IAAD,EAClCiJ,EAAQ,2BAAKtI,GAAN,uBAAaZ,EAAOC,EAAMC,OAAOC,OAAjC,0BAAkD,GAAlD,OAGLsJ,EAAgB,SAACR,EAAUD,GAC7B,OAAIC,GAAYD,EAAQ/K,OAAS,EACvB,SAAN,OAAgB+K,EAAQ/K,OAAxB,aAEAgL,GAAYD,EAAQ/K,OAAS,EACvB,yBADV,GA4CJ,OACI,sBAAKH,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SAxBJ,sBAAM8E,SAAU4G,EAAhB,SACI,uBAAM1L,UAAU,mBAAhB,UACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,yBAAQA,UAAU,WAAWmD,SAAUlB,EAAa,YAApD,UACI,wBAAQI,MAAM,MAAd,2BACC6C,EAAWe,KAAI,SAACC,EAAGC,GAAJ,OACZ,wBAAgB9D,MAAO6D,EAAElC,IAAzB,SAA+BkC,EAAEhE,MAApBiE,WAIzB,uBAAOjD,KAAK,SAASlD,UAAU,eAAemD,SAAUlB,EAAa,UAAW2J,YAAY,sBAEhG,qBAAK5L,UAAU,yBAAyBC,MAAO,CAAEmI,OAAQ,QAAzD,SACI,wBAAQpI,UAAU,mBAAlB,6BAaR,qBAAKA,UAAU,uBAAf,SA5CiB,WAAmB,IAAlBkL,EAAiB,uDAAP,GAChC,OACI,gCACI,oBAAIlL,UAAU,YAAd,SACK2L,EAAcR,EAAUD,KAE7B,qBAAKlL,UAAU,MAAf,SACKkL,EAAQjF,KAAI,SAACH,EAASK,GAAV,OACT,cAAC,EAAD,CAAcL,QAASA,GAAZK,WAqClB0F,CAAiBX,SC9CnBY,EAtDF,WACT,MAA4CrK,mBAAS,IAArD,mBAAOsK,EAAP,KAAuBC,EAAvB,KACA,EAAkDvK,mBAAS,IAA3D,mBAAOwK,EAAP,KAA0BC,EAA1B,KACA,EAA0BzK,oBAAS,GAAnC,mBAAc2C,GAAd,WA2BA,OALAuB,qBAAU,WATN2C,EAAY,aAAa1H,MAAK,SAAAkC,GACtBA,EAAKlB,MACLwC,EAAStB,EAAKlB,OAEdsK,EAAqBpJ,MAd7BwF,EAAY,QAAQ1H,MAAK,SAAAkC,GACjBA,EAAKlB,MACLwC,EAAStB,EAAKlB,OAEdoK,EAAkBlJ,QAkB3B,IAGC,eAAC,EAAD,CAAQzB,MAAM,YAAYC,YAAY,QAAQtB,UAAU,kBAAxD,UACI,cAAC,EAAD,IACA,oBAAIA,UAAU,OAAd,0BACA,qBAAKA,UAAU,MAAf,SACKiM,EAAkBhG,KAAI,SAACH,EAASK,GAAV,OACnB,qBAAanG,UAAU,aAAvB,SACI,cAAC,EAAD,CAAM8F,QAASA,KADTK,QAMlB,oBAAInG,UAAU,OAAd,0BACA,qBAAKA,UAAU,MAAf,SACK+L,EAAe9F,KAAI,SAACH,EAASK,GAAV,OAChB,qBAAanG,UAAU,aAAvB,SACI,cAAC,EAAD,CAAM8F,QAASA,KADTK,Y,QCnDjBgG,EAAS,CAClB,CACInI,IAAK,EACL9B,KAAM,MACNkK,MAAO,IAEX,CACIpI,IAAK,EACL9B,KAAM,WACNkK,MAAO,CAAC,EAAG,IAEf,CACIpI,IAAK,EACL9B,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEhB,CACIpI,IAAK,EACL9B,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEhB,CACIpI,IAAK,EACL9B,KAAM,aACNkK,MAAO,CAAC,GAAI,KAEhB,CACIpI,IAAK,EACL9B,KAAM,iBACNkK,MAAO,CAAC,GAAI,OCFLC,EAzBE,SAAC,GAAmC,IAAjCnH,EAAgC,EAAhCA,WAAYoH,EAAoB,EAApBA,cAC5B,EAA8B7K,mBAAS,IAAvC,mBAAO8K,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAAAvG,GAAC,OAAI,WACtB,IAAMwG,EAAoBH,EAAQI,QAAQzG,GACpC0G,EAAoB,YAAOL,IAGN,IAAvBG,EACAE,EAAqBzL,KAAK+E,GAE1B0G,EAAqB/B,OAAO6B,EAAmB,GAEnDF,EAAWI,GACXN,EAAcM,KAGlB,OAAO1H,EAAWe,KAAI,SAACC,EAAGC,GAAJ,OAClB,qBAAYnG,UAAU,gBAAtB,UACI,uBAAOkD,KAAK,WAAWlD,UAAU,mBAAmBqC,MAAOkK,EAAQI,SAAmB,IAAXzG,EAAElC,KAAab,SAAUsJ,EAAavG,EAAElC,OACnH,uBAAOhE,UAAU,mBAAjB,SAAqCkG,EAAEhE,SAFlCiE,OCHF0G,EAfE,SAAC,GAA+B,IAA7BV,EAA4B,EAA5BA,OAAQG,EAAoB,EAApBA,cACxB,EAA0B7K,mBAAS,GAAnC,mBAAcqL,GAAd,WAEM7K,EAAe,SAACE,GAClBmK,EAAcnK,EAAMC,OAAOC,OAC3ByK,EAAS3K,EAAMC,OAAOC,QAE1B,OAAO8J,EAAOlG,KAAI,SAACgC,EAAG9B,GAAJ,OACd,gCACI,uBAAOjD,KAAK,QAAQlD,UAAU,YAAYkC,KAAM+F,EAAG5F,MAAK,UAAK4F,EAAEjE,KAAOb,SAAUlB,IAChF,uBAAOjC,UAAU,mBAAjB,SAAqCiI,EAAE/F,SAFjCiE,OCuHH4G,EAzHF,WACT,MAAkCtL,mBAAS,CACvCmH,QAAS,CAAEnE,SAAU,GAAIQ,MAAO,MADpC,mBAAO+H,EAAP,KAAkBC,EAAlB,KAGA,EAAoCxL,mBAAS,IAA7C,mBAAOyD,EAAP,KAAmBgI,EAAnB,KACA,EAA0BzL,oBAAS,GAAnC,mBAAc2C,GAAd,WACA,EAA0B3C,mBAAS,GAAnC,mBAAOkH,EAAP,KACA,GADA,KACwBlH,mBAAS,IAAjC,mBAAOiH,EAAP,KAAayE,EAAb,KACA,EAAwB1L,mBAAS,GAAjC,mBAAO2L,EAAP,KAAaC,EAAb,KACA,EAA8C5L,mBAAS,IAAvD,mBAAO6L,EAAP,KAAwBC,EAAxB,KAYMC,EAAsB,SAACC,GAEzBhF,EAAoBC,EAAMC,EAAO8E,GAAY7M,MAAK,SAAAkC,GAC1CA,EAAKlB,MACLwC,EAAStB,EAAKlB,QAGd2L,EAAmBzK,EAAKA,MACxBuK,EAAQvK,EAAKsK,MACbD,EAAQ,QAKdO,EAAW,WACb,IAAIC,EAASjF,EAAOC,EAEpBF,EAAoBkF,EAAQhF,EAAOqE,EAAUpE,SAAShI,MAAK,SAAAkC,GACnDA,EAAKlB,MACLwC,EAAStB,EAAKlB,QAEd2L,EAAmB,GAAD,mBAAKD,GAAL,YAAyBxK,EAAKA,QAChDuK,EAAQvK,EAAKsK,MACbD,EAAQQ,QAepBhI,qBAAU,WA/CN6C,IAAgB5H,MAAK,SAAAkC,GACbA,EAAKlB,MACLwC,EAAStB,EAAKlB,OAEdsL,EAAcpK,MA6CtB0K,EAAoB9E,EAAasE,EAAUpE,WAC5C,IAEH,IAAM0D,EAAgB,SAAC1D,EAASgF,GAC5B,IAAMH,EAAU,eAAQT,GAGxB,GAFAS,EAAW7E,QAAQgF,GAAYhF,EAEd,UAAbgF,EAAsB,CACtB,IAAIC,EAAcC,EAAYlF,GAC9B6E,EAAW7E,QAAQgF,GAAYC,EAEnCL,EAAoBR,EAAUpE,SAC9BqE,EAAaQ,IAGXK,EAAc,SAAAzL,GAChB,IAAMS,EAAOqJ,EAGP4B,EAAMjL,EAAKsH,MAAK,SAAAtB,GAAI,OAAIA,EAAK9E,MAAQgK,SAAS3L,MAOpD,OANQS,EAAKiL,EAAI/J,KAAKoI,OAS1B,OACI,cAAC,EAAD,CAAQ/K,MAAM,YAAYC,YAAY,uCAAuCtB,UAAU,kBAAvF,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sDACA,6BACI,cAAC,EAAD,CAAUkF,WAAYA,EAAYoH,cAAe,SAAA1D,GAAO,OAAI0D,EAAc1D,EAAS,iBAEvF,wDACA,8BACI,cAAC,EAAD,CAAUuD,OAAQA,EAAQG,cAAe,SAAA1D,GAAO,OAAI0D,EAAc1D,EAAS,iBAInF,sBAAK5I,UAAU,QAAf,UACI,oBAAIA,UAAU,OAAd,sBACA,qBAAKA,UAAU,MAAf,SACKsN,EAAgBrH,KAAI,SAACH,EAASK,GAAV,OACjB,qBAAanG,UAAU,aAAvB,SACI,cAAC,EAAD,CAAM8F,QAASA,KADTK,QAKlB,uBA9DRiH,EAAO,GAAKA,GAAQzE,GAChB,wBAAQ3I,UAAU,uBAAuBO,QAASmN,EAAlD,gCCRDO,EA/CC,SAACtK,GACb,MAA8BlC,mBAAS,IAAvC,mBAAOqE,EAAP,KAAgBoI,EAAhB,KACA,EAA4CzM,mBAAS,IAArD,mBAAO0M,EAAP,KAAuBC,EAAvB,KACA,EAA0B3M,oBAAS,GAAnC,mBAAc2C,GAAd,WAEMiK,EAAoB,SAAA/D,IT6CV,SAACA,GACjB,OAAO5J,MAAM,GAAD,OAAIzB,EAAJ,oBAAmBqL,GAAa,CACxC3J,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OSnD1BqN,CAAKhE,GAAW1J,MAAK,SAAAkC,GACbA,EAAKlB,MACLwC,EAAStB,EAAKlB,QAEdsM,EAAWpL,GTkDA,SAACwH,GACxB,OAAO5J,MAAM,GAAD,OAAIzB,EAAJ,6BAA4BqL,GAAa,CACjD3J,OAAQ,QAEPC,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MSvDlBsN,CAAYzL,EAAKkB,KAAKpD,MAAK,SAAAkC,GACnBA,EAAKlB,MACLwC,EAAStB,EAAKlB,OAEdwM,EAAkBtL,WAYtC,OALA6C,qBAAU,WACN,IAAM2E,EAAY3G,EAAM6K,MAAMlD,OAAOhB,UACrC+D,EAAkB/D,KACnB,CAAC3G,IAGA,cAAC,EAAD,CAAQtC,MAAOyE,GAAWA,EAAQ5D,KAAMZ,YAAawE,GAAWA,EAAQxE,aAAewE,EAAQxE,YAAYoJ,UAAU,EAAG,KAAM1K,UAAU,kBAAxI,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACK8F,GAAWA,EAAQxE,aAAe,cAAC,EAAD,CAAwBwE,QAASA,EAASuD,uBAAuB,GAAtDvD,EAAQ9B,OAE1D,sBAAKhE,UAAU,QAAf,UACI,kDACCmO,EAAelI,KAAI,SAACH,EAASK,GAAV,OAChB,qBAAanG,UAAU,OAAvB,SACI,cAAC,EAAD,CAAM8F,QAASA,KADTK,e,kBC6HnBsI,EA7JE,SAAC,GAAoD,IAAlDzG,EAAiD,EAAjDA,SAAiD,IAAvCyB,cAAuC,MAA9B,SAAAC,GAAC,OAAIA,GAAyB,MAAtBC,WAAsB,WAAhBC,EAAgB,EACjE,EAAwBnI,mBAAS,CAC7BI,SAAS,EACTwB,SAAS,EACTqL,YAAa,KACb9M,MAAO,GACP+M,SAAU,GACV5G,QAAS,KANb,mBAAOjF,EAAP,KAAasI,EAAb,KASM5G,EAASrF,KAAqBA,IAAkBiB,KAAK4D,IACrDM,EAAQnF,KAAqBA,IAAkBmF,MAE/CsK,EAAW,SAACpK,EAAQF,IVoDS,SAACE,EAAQF,GAC5C,OAAO5D,MAAM,GAAD,OAAIzB,EAAJ,+BAA8BuF,GAAU,CAChD7D,OAAQ,MACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBiC,cAAc,UAAD,OAAYJ,MAG5B1D,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OU/D1B4N,CAAwBrK,EAAQF,GAAO1D,MAAK,SAAAkC,GACpCA,EAAKlB,MACLwJ,EAAQ,2BAAKtI,GAAN,IAAYlB,MAAOkB,EAAKlB,SAE/BwJ,EAAQ,CAAEsD,YAAa5L,EAAK4L,kBAKxC/I,qBAAU,WACNiJ,EAASpK,EAAQF,KAClB,IAEH,IA4GkB1C,EAIEyB,EAIAxB,EApHdiN,EAAgB,SAAA3M,GAClBiJ,EAAQ,2BAAKtI,GAAN,IAAYiF,QAAS5F,EAAMC,OAAOC,UAGvC0M,EAAW,WACb,OAAO/G,EAASgH,QAAO,SAACC,EAAcC,GAClC,OAAOD,EAAeC,EAAU7G,MAAQ6G,EAAUjK,QACnD,IAaHkK,EAAkBrM,EAAKiF,QAErBqH,EAAM,WACRhE,EAAQ,CAAEvJ,SAAS,IAIJiB,EAAK6L,SACfU,uBACAzO,MAAK,SAAAkC,GACFhC,QAAQC,IAAI+B,GAKZ,IAAMwM,EAAc,CAChBC,mBALIzM,EAAK0M,MAMT7H,OAAQoH,MVgBE,SAACvK,EAAQF,EAAOgL,GAC1C,OAAO5O,MAAM,GAAD,OAAIzB,EAAJ,8BAA6BuF,GAAU,CAC/C7D,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBiC,cAAc,UAAD,OAAYJ,IAE7B5B,KAAMnD,KAAKoD,UAAU2M,KAEpB1O,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OU1BlBwO,CAAejL,EAAQF,EAAOgL,GACzB1O,MAAK,SAAAC,GAEFuK,EAAQ,2BAAKtI,GAAN,IAAYO,QAASxC,EAASwC,WAOrC,IAAMqM,EAAkB,CACpB1H,SAAUA,EACVN,eAAgB7G,EAAS8O,YAAYxF,GACrCxC,OAAQ9G,EAAS8O,YAAYhI,OAC7BI,QAASoH,IVeV,SAAC3K,EAAQF,EAAOoL,GACvC,OAAOhP,MAAM,GAAD,OAAIzB,EAAJ,yBAAwBuF,GAAU,CAC1C7D,OAAQ,OACR6B,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBiC,cAAc,UAAD,OAAYJ,IAE7B5B,KAAMnD,KAAKoD,UAAU,CAAEiN,MAAOF,MAE7B9O,MAAK,SAAAC,GACF,OAAOA,EAAS+B,UAEnB5B,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,OU1BV4O,CAAYrL,EAAQF,EAAOoL,GACtB9O,MAAK,SAAAC,GtBZT,IAAAL,IsBaiB,WACNiJ,GAAQE,GACR7I,QAAQC,IAAI,kCACZqK,EAAQ,CAAEvJ,SAAS,EAAOwB,SAAS,KtBf7C,qBAAXjE,SACPC,aAAaoB,WAAW,QACxBD,QsBgBqBQ,OAAM,SAAAY,GACHd,QAAQC,IAAIa,GACZwJ,EAAQ,CAAEvJ,SAAS,UAG9Bb,OAAM,SAAAY,GACHd,QAAQC,IAAIa,GACZwJ,EAAQ,CAAEvJ,SAAS,UAG9Bb,OAAM,SAAAY,GACHd,QAAQC,IAAI,gBAAiBa,GAC7BwJ,EAAQ,2BAAKtI,GAAN,IAAYlB,MAAOA,EAAMkO,eAItCC,EAAa,kBACf,qBAAKC,OAAQ,kBAAM5E,EAAQ,2BAAKtI,GAAN,IAAYlB,MAAO,OAA7C,SAC0B,OAArBkB,EAAK4L,aAAwB1G,EAAS7H,OAAS,EAC5C,gCACI,sBAAKH,UAAU,aAAf,UACI,uBAAOA,UAAU,aAAjB,+BACA,0BACIA,UAAU,eACVqC,MAAOS,EAAKiF,QACZ6D,YAAY,qCACZzI,SAAU2L,OAGlB,cAAC,IAAD,CACImB,QAAS,CACLC,cAAepN,EAAK4L,YACpByB,OAAQ,CACJC,KAAM,UAGdC,WAAY,SAAA1B,GAAQ,OAAK7L,EAAK6L,SAAWA,KAE7C,wBAAQpO,QAAS6O,EAAKpP,UAAU,4BAAhC,oBAEJ,QAcZ,OACI,gCACI,0CAAa+O,QAJDlN,EAMCiB,EAAKjB,QANKA,GAAY,8CAJvBwB,EAWCP,EAAKO,QAVtB,qBAAKrD,UAAU,mBAAmBC,MAAO,CAAEgD,QAASI,EAAU,GAAK,QAAnE,oDALczB,EAgBCkB,EAAKlB,MAfpB,qBAAK5B,UAAU,qBAAqBC,MAAO,CAAEgD,QAASrB,EAAQ,GAAK,QAAnE,SAA8EA,KAlGvEzC,IACH,8BAAM4Q,MAEN,cAAC,IAAD,CAAM7P,GAAG,UAAT,SACI,wBAAQF,UAAU,kBAAlB,uCCJDsQ,EAzCF,WACT,MAA0B7O,mBAAS,IAAnC,mBAAO8O,EAAP,KAAcC,EAAd,KACA,EAAsB/O,oBAAS,GAA/B,mBAAOkI,EAAP,KAAYF,EAAZ,KAEA9D,qBAAU,WACN6K,EvB4BkB,qBAAXpR,QACHC,aAAaC,QAAQ,QACdC,KAAKC,MAAMH,aAAaC,QAAQ,SAGxC,MuBhCJ,CAACqK,IAkBJ,OACI,cAAC,EAAD,CAAQtI,MAAM,gBAAgBC,YAAY,oEAAoEtB,UAAU,kBAAxH,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACKuQ,EAAMpQ,OAAS,EApBd,SAAAoQ,GACd,OACI,gCACI,0DAAsBA,EAAMpQ,QAA5B,YACA,uBACCoQ,EAAMtK,KAAI,SAACH,EAASK,GAAV,OACP,cAAC,EAAD,CAAcL,QAASA,EAASwD,qBAAqB,EAAOC,YAAY,EAAMC,yBAAyB,EAAMC,OAAQA,EAAQE,IAAKA,GAAvHxD,SAcSsK,CAAUF,QAPZ,MAUtB,sBAAKvQ,UAAU,QAAf,UACI,oBAAIA,UAAU,OAAd,+BACA,uBACA,cAAC,EAAD,CAAUgI,SAAUuI,EAAO9G,OAAQA,EAAQE,IAAKA,aCLrD+G,EApBA,WACX,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO/Q,KAAK,IAAIgR,OAAK,EAACnN,UAAWsI,IACjC,cAAC,IAAD,CAAOnM,KAAK,QAAQgR,OAAK,EAACnN,UAAWuJ,IACrC,cAAC,IAAD,CAAOpN,KAAK,QAAQgR,OAAK,EAACnN,UAAW8M,IACrC,cAAC,IAAD,CAAO3Q,KAAK,sBAAsBgR,OAAK,EAACnN,UAAWoN,IACnD,cAAC,IAAD,CAAOjR,KAAK,UAAUgR,OAAK,EAACnN,UAAWhC,IACvC,cAAC,IAAD,CAAO7B,KAAK,UAAUgR,OAAK,EAACnN,UAAWJ,IACvC,cAAC,EAAD,CAAczD,KAAK,kBAAkBgR,OAAK,EAACnN,UAAWO,IACtD,cAAC,EAAD,CAAYpE,KAAK,mBAAmBgR,OAAK,EAACnN,UAAWS,IACrD,cAAC,EAAD,CAAYtE,KAAK,mBAAmBgR,OAAK,EAACnN,UAAWU,IACrD,cAAC,EAAD,CAAYvE,KAAK,kBAAkBgR,OAAK,EAACnN,UAAWwB,IACpD,cAAC,EAAD,CAAYrF,KAAK,gBAAgBgR,OAAK,EAACnN,UAAW4C,UC1BlEyK,IAASnN,OACP,cAAC,EAAD,IAAYoN,SAASC,eAAe,W","file":"static/js/main.765c2a87.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from \"../config\";\r\n\r\nexport const signup = (user) => {\r\n    // console.log(name, email, password)\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const signin = (user) => {\r\n    // console.log(name, email, password)\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout = (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: 'GET',\r\n\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    } else {\r\n        return false;\r\n    }\r\n}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signout, isAuthenticated } from '../auth';\r\nimport { itemTotal } from './cartHelpers';\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: '#ff9900' }\r\n    } else {\r\n        return { color: '#ffffff' }\r\n    }\r\n}\r\n\r\nconst Menu = ({ history }) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"/\")} to=\"/\">\r\n                    Home\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"/shop\")} to=\"/shop\">\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"/cart\")} to=\"/cart\">\r\n                    Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup>\r\n                </Link>\r\n            </li>\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"/user/dashboard\")} to=\"/user/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"/admin/dashboard\")} to=\"/admin/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n            {!isAuthenticated() && (\r\n                <>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(history, \"/Signin\")} to=\"/Signin\">\r\n                            Signin\r\n                </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(history, \"/Signup\")} to=\"/Signup\">\r\n                            Signup\r\n                </Link>\r\n                    </li>\r\n                </>\r\n            )}\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\" style={{ cursor: 'pointer', color: '#ffffff' }} onClick={() => signout(() => {\r\n                        history.push('/')\r\n                    })}>\r\n                        Signout\r\n                </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default withRouter(Menu);","export const addItem = (item, next) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        })\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id)\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n\r\n    }\r\n}\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n}\r\n\r\nexport const removeItem = (productId) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1)\r\n            }\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n    return cart;\r\n}\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem(\"cart\");\r\n        next();\r\n    }\r\n}","import React from 'react';\r\nimport Menu from './Menu';\r\nimport '../styles.css'\r\n\r\nconst Layout = ({ title = \"\", description = \"\", className, children }) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n)\r\n\r\nexport default Layout;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\nimport { computeHeadingLevel } from '@testing-library/dom';\r\n\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'ps102646@gmail.com',\r\n        password: 'ps102640',\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    })\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values\r\n    const { user } = isAuthenticated()\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false, loading: true })\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, loading: false })\r\n                } else {\r\n                    authenticate(\r\n                        data, () => {\r\n                            setValues({\r\n                                ...values,\r\n                                redirectToReferrer: true,\r\n                            })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    const signupForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" value={email} onChange={handleChange('email')} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" value={password} onChange={handleChange('password')} className=\"form-control\" />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? \"\" : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>loading...</h2>\r\n            </div>)\r\n    )\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n    return (\r\n        <Layout title=\"Signin Page\" description=\"React\" className=\"container col-md-8 offset-md-2\">\r\n            {showLoading()}\r\n            {showError()}\r\n            {signupForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signin;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from \"../auth\";\r\n\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false\r\n    })\r\n\r\n    const { name, email, password, success, error } = values\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        signup({ name, email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, success: false })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        password: \"\",\r\n                        error: \"\",\r\n                        success: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const signupForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" value={name} onChange={handleChange('name')} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" value={email} onChange={handleChange('email')} className=\"form-control\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" value={password} onChange={handleChange('password')} className=\"form-control\" />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? \"\" : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? \"\" : 'none' }}>\r\n            New account is created. Please <Link to=\"/signin\">signin</Link>\r\n        </div>\r\n    )\r\n    return (\r\n        <Layout title=\"Signup Page\" description=\"React\" className=\"container col-md-8 offset-md-2\">\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signupForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => isAuthenticated() ? (\r\n        <Component {...props} />\r\n    ) : (\r\n        <Redirect to={{\r\n            pathname: '/signin',\r\n            state: { from: props.location }\r\n        }}\r\n        />\r\n    )}\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n        <Component {...props} />\r\n    ) : (\r\n        <Redirect to={{\r\n            pathname: '/signin',\r\n            state: { from: props.location }\r\n        }}\r\n        />\r\n    )}\r\n    />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom'\r\nconst Dashboard = () => {\r\n\r\n    const { user: { _id, name, email, role } } = isAuthenticated()\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile/update\">Update Profile</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">{role === 1 ? 'Admin' : 'Registerd User'}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const purchaseHistory = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">history</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Hello ${name}!`} className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    {userLinks()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const { user: { _id, name, email, role } } = isAuthenticated()\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">Create Category</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">Create Product</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">View Orders</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">{role === 1 ? 'Admin' : 'Registerd User'}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Hello ${name}!`} className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"> {adminLinks()} </div>\r\n                <div className=\"col-9\"> {adminInfo()} </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","import React, { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createCategory } from './apiAdmin';\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const handleChange = (e) => {\r\n        setError(\"\")\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const clickSubmit = (e) => {\r\n        e.preventDefault()\r\n        setError(\"\")\r\n        setSuccess(false)\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(data.error)\r\n                } else {\r\n                    setError(\"\")\r\n                    setSuccess(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    const newCategoryForm = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} autoFocus />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>\r\n        }\r\n    }\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category is should be unique</h3>\r\n        }\r\n    }\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"Add a new category\" description={`Hello ${user.name}, ready to add a new category`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddCategory;","import { API } from \"../config\";\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    // console.log(name, email, password)\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\n// import { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        shipping: \"\",\r\n        quantity: \"\",\r\n        photo: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        redirectToProfile: false,\r\n        formData: \"\"\r\n    })\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        // category,\r\n        // shipping,\r\n        quantity,\r\n        // photo,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        // redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({ ...values, categories: data, formData: new FormData() })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value)\r\n        // for (var key of formData.entries()) {\r\n        //     console.log(key[0] + ', ' + key[1]);\r\n        // }\r\n        setValues({ ...values, [name]: value });\r\n\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: \"\", loading: true })\r\n        createProduct(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error })\r\n                } else {\r\n                    setValues({ ...values, name: \"\", description: \"\", photo: \"\", price: \"\", quantity: \"\", loading: false, createdProduct: data.name })\r\n                }\r\n            })\r\n    }\r\n\r\n    const newPostForm = () => (\r\n        <form onSubmit={clickSubmit} className=\"mb-3\">\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories && categories.map((c, i) => (\r\n                        <option key={i} value={c._id}>{c.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">\r\n                Create Product\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created !</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>loading...</h2>\r\n            </div>\r\n        )\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`Hello ${user.name}, ready to add a new product`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\n// import { Link } from 'react-router-dom';\r\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin';\r\nimport moment from 'moment';\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setStatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, [])\r\n\r\n    const showOrdersLength = orders => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">Total orders: {orders.length}</h1>\r\n            )\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>\r\n        }\r\n    }\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n\r\n    const showStatus = (o) => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status : {o.status}</h3>\r\n            <select className=\"form-control\" onChange={(e) => handleStatusChange(e, o._id)}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>{status}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"Add a new category\" description={`Hello ${user.name},you can manage all the orders here.`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength(orders)}\r\n\r\n                    {orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div className=\"mt-5\" key={oIndex} style={{ borderBottom: \"5px solid indigo\" }}>\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID : {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID : {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount : {o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by : {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on : {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address :　{o.address}\r\n                                    </li>\r\n                                </ul>\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total product in the order : {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div className=\"mb-4\" key={pIndex} style={{ padding: '20px', border: '1px solid indigo' }}>\r\n                                        {showInput('Product name', p.name)}\r\n                                        {showInput('Product price', p.price)}\r\n                                        {showInput('Product total', p.count)}\r\n                                        {showInput('Product Id', p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Orders","import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = (sortBy) => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        skip, limit, filters\r\n    }\r\n    // console.log(name, email, password)\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const list = params => {\r\n    const query = queryString.stringify(params)\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const read = (productId) => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const listRelated = (productId) => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n","import React from 'react'\r\nimport { API } from '../config'\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img src={`${API}/${url}/photo/${item._id}`} alt={item.name} className=\"mb-3\" style={{ maxHeight: '100%', maxWidth: '100%' }} />\r\n    </div>\r\n)\r\n\r\nexport default ShowImage;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({ product, showViewProductButton = true, showAddToCartButton = true, cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run = undefined }) => {\r\n    const [redirect, setRedirect] = useState(false)\r\n    // const [count, setCount] = useState(product.count)\r\n\r\n    const showViewButton = showViewProductButton => {\r\n        return (\r\n            showViewProductButton && (\r\n                <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                    <button className=\"btn btn-outline-primary mt-2 mb-2\">\r\n                        View Product\r\n                </button>\r\n                </Link>\r\n            )\r\n        )\r\n    }\r\n\r\n    const addToCart = () => {\r\n        addItem(product, () => {\r\n            setRedirect(true)\r\n        })\r\n    }\r\n\r\n    const shouldRedirect = redirect => {\r\n        if (redirect) {\r\n            return <Redirect to=\"/cart\" />\r\n        }\r\n    }\r\n\r\n    const showAddToCart = showAddToCartButton => {\r\n        return (\r\n            showAddToCartButton && (\r\n                <button className=\"btn btn-outline-warning mt-2 mb-2\" onClick={addToCart}>\r\n                    Add to cart\r\n                </button>\r\n            )\r\n\r\n        )\r\n    }\r\n\r\n    const showRemoveButton = showRemoveProductButton => {\r\n        return (\r\n            showRemoveProductButton && (\r\n                <button className=\"btn btn-outline-danger mt-2 mb-2\" onClick={() => {\r\n                    removeItem(product._id);\r\n                    setRun(!run); // run useEffect in parent Cart\r\n                }}>\r\n                    Remove Product\r\n                </button>\r\n            )\r\n\r\n        )\r\n    }\r\n\r\n    const showStock = (quantity) => {\r\n        return quantity > 0 ? <span className=\"badge badge-primary badge-pill\">In Stock</span> : <span className=\"badge badge-primary badge-pill\">Out of Stock</span>\r\n    }\r\n\r\n    const showCartUpdateOptions = cartUpdate => {\r\n        return cartUpdate && <div>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Adjust Quantity</span>\r\n                </div>\r\n                <input type=\"number\" className=\"form-control\" value={product.count} onChange={handleChange(product._id)} />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const handleChange = productId => event => {\r\n        setRun(!run); // run useEffect in parent Cart\r\n        // setCount(event.target.value < 1 ? 1 : event.target.value);\r\n        if (event.target.value >= 1) {\r\n            updateItem(productId, Number(event.target.value));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header name\">\r\n                {product.name}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {shouldRedirect(redirect)}\r\n                <ShowImage item={product} url=\"product\" />\r\n                <p className=\"lead mt-2\">{product.description.substring(0, 50)}</p>\r\n                <p className=\"black-10\">${product.price}</p>\r\n                <p className=\"black-9\">Category:{product.category && product.category.name}</p>\r\n                <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n\r\n                {showStock(product.quantity)}\r\n                <br />\r\n                {showViewButton(showViewProductButton)}\r\n\r\n                {showAddToCart(showAddToCartButton)}\r\n\r\n                {showRemoveButton(showRemoveProductButton)}\r\n\r\n                {showCartUpdateOptions(cartUpdate)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getCategories, list } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: '',\r\n        search: '',\r\n        results: [],\r\n        searched: false\r\n    })\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setData({ ...data, categories: data })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        if (search) {\r\n            list({ search: search || undefined, category: category })\r\n                .then(response => {\r\n                    if (response.error) {\r\n                        console.log(response.error)\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchData();\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false })\r\n    }\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`\r\n        }\r\n    }\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mr-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <Card key={i} product={product} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select className=\"btn mr-2\" onChange={handleChange(\"category\")}>\r\n                            <option value=\"All\">Pick Category</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <input type=\"search\" className=\"form-control\" onChange={handleChange(\"search\")} placeholder=\"Search by name\" />\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{ border: 'none' }}>\r\n                    <button className=\"input-group-text\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n            </div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, [])\r\n\r\n    return (\r\n        <Layout title=\"Home Page\" description=\"React\" className=\"container-fluid\">\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home;","export const prices = [\r\n    {\r\n        _id: 0,\r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"$0 to $9\",\r\n        array: [0, 9]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"$10 to $19\",\r\n        array: [10, 19]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"$20 to $29\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"$30 to $39\",\r\n        array: [30, 39]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"$More than $40\",\r\n        array: [40, 100000000]\r\n    },\r\n]","import React, { useState, useEffect } from 'react';\r\n\r\nconst CheckBox = ({ categories, handleFilters }) => {\r\n    const [checked, setChecked] = useState([])\r\n\r\n    const handleToggle = c => () => {\r\n        const currentCategoryId = checked.indexOf(c)  // return the first index or -1\r\n        const newCheckedCategoryId = [...checked]\r\n        // if currently checked was not already in checked state > push\r\n        //else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c)\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1)\r\n        }\r\n        setChecked(newCheckedCategoryId)\r\n        handleFilters(newCheckedCategoryId)\r\n    }\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input type=\"checkbox\" className=\"form-check-input\" value={checked.indexOf(c._id === -1)} onChange={handleToggle(c._id)} />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\nexport default CheckBox;","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0)\r\n\r\n    const handleChange = (event) => {\r\n        handleFilters(event.target.value)\r\n        setValue(event.target.value)\r\n    }\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input type=\"radio\" className=\"mr-2 ml-4\" name={p} value={`${p._id}`} onChange={handleChange} />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default RadioBox;","import React, { useState, useEffect } from 'react';\r\nimport { getCategories, getFilteredProducts } from './apiCore';\r\nimport { prices } from './FixedPrice';\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport CheckBox from './CheckBox';\r\nimport RadioBox from './RadioBox';\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    })\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [limit, setLimit] = useState(6)\r\n    const [skip, setSkip] = useState(0)\r\n    const [size, setSize] = useState(0)\r\n    const [filteredResults, setFilteredResults] = useState([])\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadFilteredResults = (newFilters) => {\r\n        // console.log(newFilters)\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                // console.log(data.data)\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit\r\n        // console.log(newFilters)\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 && size >= limit && (\r\n                <button className=\"btn btn-warning mb-5\" onClick={loadMore}>\r\n                    Load more\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        const newFilters = { ...myFilters }\r\n        newFilters.filters[filterBy] = filters\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters)\r\n            newFilters.filters[filterBy] = priceValues\r\n        }\r\n        loadFilteredResults(myFilters.filters)\r\n        setMyFilters(newFilters)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = prices\r\n        let array = []\r\n\r\n        const obj = data.find(item => item._id === parseInt(value))\r\n        array = data[obj._id].array\r\n        // for (let key in data) {\r\n        //     if (data[key]._id === parseInt(value)) {\r\n        //         array = data[key].array\r\n        //     }\r\n        // }\r\n        return array;\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Shop Page\" description=\"Search and find books of your choice\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <CheckBox categories={categories} handleFilters={filters => handleFilters(filters, 'category')} />\r\n                    </ul>\r\n                    <h4>Filter by prices range</h4>\r\n                    <div>\r\n                        <RadioBox prices={prices} handleFilters={filters => handleFilters(filters, 'price')} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                                <Card product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated, list } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Porduct = (props) => {\r\n    const [product, setProduct] = useState({})\r\n    const [relatedProduct, setRelatedProduct] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error)\r\n                    } else {\r\n                        setRelatedProduct(data)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId\r\n        loadSingleProduct(productId);\r\n    }, [props])\r\n\r\n    return (\r\n        <Layout title={product && product.name} description={product && product.description && product.description.substring(0, 100)} className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && <Card key={product._id} product={product} showViewProductButton={false} />}\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h4>Related Products</h4>\r\n                    {relatedProduct.map((product, i) => (\r\n                        <div key={i} className=\"mb-3\">\r\n                            <Card product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Porduct;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport Layout from './Layout';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\n\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    })\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id\r\n    const token = isAuthenticated() && isAuthenticated().token\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                setData({ ...data, error: data.error })\r\n            } else {\r\n                setData({ clientToken: data.clientToken })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, [])\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value })\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    let deliveryAddress = data.address\r\n\r\n    const buy = () => {\r\n        setData({ loading: true })\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                console.log(data)\r\n                nonce = data.nonce\r\n                // once you have nonce  (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log('send nonce and total to process:', nonce, getToken(products))\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                }\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        // console.log(response)\r\n                        setData({ ...data, success: response.success });\r\n                        // empty cart\r\n                        // emptyCart(() => {\r\n                        //     setData({ loading: false })\r\n                        //     console.log('payment success and empty cart')\r\n                        // })\r\n                        // create order\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        }\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart')\r\n                                    setData({ loading: false, success: true })\r\n                                })\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                                setData({ loading: false })\r\n                            })\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                        setData({ loading: false })\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                console.log('dropin error:', error)\r\n                setData({ ...data, error: error.message })\r\n            })\r\n    }\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: \"\" })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"grom-group\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                            onChange={handleAddress}\r\n                        />\r\n                    </div>\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: \"vault\"\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">Pay</button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>{error}</div>\r\n    )\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>Thanks! Your payment was successful!</div>\r\n    )\r\n\r\n    const showLoading = loading => loading && (<h2>Loading...</h2>)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([])\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart())\r\n    }, [run])\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card key={i} product={product} showAddToCartButton={false} cartUpdate={true} showRemoveProductButton={true} setRun={setRun} run={run} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const noItemsMessage = () => {\r\n        <h2>Your cart is empty.<br /><Link to=\"/shop\" >Continue shopping</Link></h2>\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Shopping Cart\" description=\"Manage your cart items. Add remove checkout or continue shopping.\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signin from './user/Signin';\r\nimport Signup from './user/Signup';\r\nimport PrivateRoute from './auth/PrivateRoute'\r\nimport AdminRoute from './auth/AdminRoute'\r\nimport Dashboard from './user/UserDashboard'\r\nimport AdminDashboard from './user/AdminDashboard'\r\nimport AddCategory from './admin/AddCategory'\r\nimport AddProduct from './admin/AddProduct'\r\nimport Orders from './admin/Orders'\r\nimport Home from './core/Home';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <Routes />, document.getElementById('root')\n);"],"sourceRoot":""}